<!DOCTYPE html>
<html>
<head>
    <title><?php echo $this->translation['Application Name'] . " | " . $this->pageTitle; ?></title>
    <?php
    require_once('views/helpers/Location.php');
    require_once('views/helpers/ScriptContainer.php');
    require_once('views/helpers/FormHelper.php');
    print ScriptContainer::$instance->renderCSSHead();
    print ScriptContainer::$instance->renderJSHead();
    ?>
    <style>
        .dataTables_wrapper {
            min-height: 24px;
        }

        table.display td {
            border: 1px solid #D3D3D3;
        }

        table.dataTable tr.odd {
            background-color: #CFFFCF;
        }

        table.dataTable tr.odd td.sorting_1 {
            background-color: #ACCCAC;
        }

        h2.mechanismsHeader {
            font-size: 14px;
            color: #51965B;
            margin-bottom: 0.5em;
        }

        .newMechanism {
            color: #749a02;
            font-weight: bold;
        }

        .toDeleteMechanism {
            text-decoration: line-through;
            color: #ff0202;
            font-style: italic;
        }

        .mechanismTableFooter {
            background-color: #cccccc;
        }

        .totalMechanismPercentageYes {
            background-color: #749a02;
        }

        .totalMechanismPercentageNo {
            background-color: #ff0202;
        }
    </style>
    <script type="application/javascript">
        $(document).ready(function () {
            $('#select_partner').on('change', availableMechanisms);
            window.ITECH.totalPercent = 0;

            /* Init the table */
            $('#employee_mechanism_table').dataTable({
                "bJQueryUI": true,
                "bPaginate": false,
                "bSort": true,
                "bInfo": false,
                "bFilter": false,
                "bAutoWidth": false
            });

            window.ITECH.mechData = <?php echo json_encode($this->mechanismData, JSON_HEX_APOS); ?>;
<?php
                $disassociateIDs = isset($this->employee['disassociateMechanisms']) ? json_encode(explode(',', $this->employee['disassociateMechanisms']), JSON_HEX_APOS) : '[]';
                $associateIDs = isset($this->employee['associateMechanisms']) ? json_encode(explode(',', $this->employee['associateMechanisms']), JSON_HEX_APOS) : '[]';
                $mechanismPercentages = isset($this->employee['mechanismPercentages']) ? json_encode(explode(',', $this->employee['mechanismPercentages']), JSON_HEX_APOS) : '[]';
                echo "            var disassociateIDs = $disassociateIDs;", PHP_EOL;
                echo "            var associateMechanisms = $associateIDs;", PHP_EOL;
                echo "            var mechanismPercentages = $mechanismPercentages;", PHP_EOL;
?>

            $("#disassociateMechanisms").data("ids", disassociateIDs);
            $("#associateMechanisms").data("ids", associateMechanisms);
            $("#mechanismPercentages").data("percents", mechanismPercentages);

            if (disassociateIDs.length > 0) {
                var selectorString = '';
                for (var i in disassociateIDs) {
                    selectorString = selectorString + '#table_mechanism_delete_toggle_' + disassociateIDs[i] + ',';
                }

                // jQuery ignores the trailing comma in the string, nice.
                $(selectorString).each(function(i, element) {
                    element.checked = true;
                    deleteToggle(element);
                });
            }

            if ((associateMechanisms.length > 0) && (associateMechanisms.length == mechanismPercentages.length)) {
                for (var i in associateMechanisms) {
                    addMechanismToTable(associateMechanisms[i], mechanismPercentages[i]);
                }
            }
            availableMechanisms();
            calculateMechanismTable();
        });

        function basedAtOther() {
            $('#based_at_other_container').toggle($("#employee_base_option_id option:selected").text() === "<?php echo t('Other'); ?>");
        }

        $(document).ready(function () {  /* doc ready */

            itech_save_confirm_on_leave();

            basedAtOther();

            var validCHWids = <?php echo json_encode($this->validCHWids); ?>;
            $('#select_employee_qualification_option').change(function () { /* watch Cadre field and show/hide CHW divs on CHW fields */

                if (validCHWids.lastIndexOf(parseInt($(this).val())) != -1) { // found in the valid list
                    $('#chw,#classWrapper').show();
                } else {
                    $('#chw,#classWrapper').hide();
                }
            });

            $('#disability_option_id').change(function () { /* watch disability field */
                var objs = $('#disability_comments').parent();
                if ($(this).val() == 1) { // show or hide based on value
                    objs.show();
                    objs.prev().show();
                } else {
                    objs.prev().hide();
                    objs.hide();
                }
            }).change(); // fire once

            $('#id').attr({readonly: 'readonly'});
            $('#partner_employee_number').attr({readonly: 'readonly'});
            $('#annual_cost').attr({readonly: 'readonly'});

            $('.datepicker').datepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: "-90:+50",
                dateFormat: "dd/mm/yy"
            });
            $('.calendarbtn').click(openNearestDatePicker);

            $('#salary,#benefits,#additional_expenses,#stipend').change(function () { /* calc amounts */
                $('#annual_cost').calcFieldsMoney('#salary,#benefits,#additional_expenses,#stipend', '#annual_cost');
                calculateMechanismTable();
            });

            $('#funded_hours_per_week').change(function () {
                calculateMechanismTable();
            });

            $('#select_employee_transition_option').change(function (e) { /* watch the two transition drop downs */
                var selected = $(this).find('option:selected').text();
                if (selected.indexOf("Other") != -1) {
                    $('.transition_other,#transition_other').show();
                } else {
                    $('.transition_other,#transition_other').hide();
                }
            }).change(); // fire once

            $('select[name=employee_transition_complete_option_id]').change(function (e) { /* watch the two transition drop downs */
                var selected = $(this).find('option:selected').text();
                if (selected.indexOf("Other") != -1) {
                    $('.transition_complete_other,#transition_complete_other').show();
                } else {
                    $('.transition_complete_other,#transition_complete_other').hide();
                }
            }).change(); // fire once
        });

        (function ($) {

            $.fn.calcFieldsMoney = function (selector, errField) {
                var flds = $(selector);
                if (!flds.length)
                    return;

                var total = 0;
                $('.dec_warning').remove();
                flds.each(function (i, val) {
                	//TA:#282 accept decimal values
                var new_val = ($(this).val()) ? parseFloat($(this).val()) : 0;
               	 total += new_val;
                });

                if (isNaN(total))
                    total = '?';

                if (total > 2000000) {
                    alert('<?php echo t('Annual Cost'); ?>' + ' - total cannot be greater than 2,000,000');
                    $(this).val(null);
                }
                else {
                    $(this).val(total);
                }
                return this;

            };
        })(jQuery);

        /**
         * calculate values for mechanism table hours and cost based on mechanism percentages
         * and employee funded hours and annual cost
         * Sets page global variable window.ITECH.totalPercent to use for validating added mechanisms
         * @returns {boolean}
         */
        var calculateMechanismTable = function () {
            //TA:327
            var hours = parseFloat($('#funded_hours_per_week').val());
            //TA:#282
            var cost = parseFloat($('#annual_cost').val());

            if (isNaN(hours) || isNaN(cost)) {
                return false;
            }

            // calculate from existing table cells, this is called when hours or cost change
            // so all hours and cost need to be re-calculated

            var $rows = $("#employee_mechanism_table > tbody > tr");
            var len = $rows.length;
            var percentAccumulate = 0;
            for (var i = 0; i < len; i++) {
                //TA:#327
            	var pcent = parseFloat($($rows[i]).children().first().next().text());
                var $node = $($rows[i]).children().first().next();

                var pcent = parseFloat($node.text());
                if (!isNaN(pcent) && (!$node.hasClass('toDeleteMechanism'))) {
                    percentAccumulate += pcent;
                    $node = $node.next();
                    $node.text(((pcent / 100.0) * hours).toFixed(1));
                    $node = $node.next();
                    $node.text(((pcent / 100.0) * cost).toFixed(2));
                }
            }

            // update the footer with totals
            var $footerChildren = $("#employee_mechanism_table > tfoot > tr:first-child").children();
            var fpercent = percentAccumulate / 100.0;
            var $totalPercent = $footerChildren.first().next();
            $totalPercent.text(percentAccumulate);
            var $totalHours = $totalPercent.next();
            $totalHours.text((fpercent * hours).toFixed(1));
            var $totalCost = $totalHours.next();
            $totalCost.text((fpercent * cost).toFixed(2));
            if (percentAccumulate > 100) {
                $("#mechanismTableFooterPercent").attr('class', "totalMechanismPercentageNo");
            }
            else {
                $("#mechanismTableFooterPercent").attr('class', "totalMechanismPercentageYes");
            }
            window.ITECH.totalPercent = percentAccumulate;
        };


        /**
         * handles the action when the delete checkbox is pressed
         * @param element - the checkbox element clicked on by the user
         * @returns {boolean}
         */
        function deleteToggle(element) {
            // get jQuery version of the element
            var $element = $(element);
            var $siblings = $element.parent().siblings('td');
            var idList = $("#disassociateMechanisms").data("ids");
            var mechData = window.ITECH.mechData;
            var mechID = $element.parent().parent().attr("id").split('_').pop();

            if (element.checked) {
                if ($element.parent().parent().hasClass('newMechanism')) {
                    var mechIndex = $.inArray(mechID, $("#associateMechanisms").data('ids'));
                    $("#associateMechanisms").data('ids').splice(mechIndex, 1);
                    $("#mechanismPercentages").data('percents').splice(mechIndex, 1);
                    $('#employee_mechanism_table').dataTable().fnDeleteRow($element.parent().parent()[0]);
                }
                else {
                    idList.push(mechID);
                    $siblings.addClass('toDeleteMechanism');
                }

                window.ITECH.mechData.assigned_mechanisms[mechID] = undefined;
            }
            else {
                if (typeof mechID != 'undefined') {
                    $siblings.removeClass('toDeleteMechanism');
                    // use jQuery's inArray because IE <9 doesn't support indexOf in arrays
                    idList.splice($.inArray(mechID, idList), 1);
                    $element.parent().parent().removeData('toDelete');
                    window.ITECH.mechData.assigned_mechanisms[mechID] = {'mechanism_option_id' : mechID,
                        'percentage' : $element.parent().siblings('td.percent').html(),
                        'mechanism_phrase' : mechData['byMechanism'][mechID]['mechanism_phrase']};
                }
            }

            calculateMechanismTable();
            availableMechanisms();

            return true;
        }

        /**
         * add new mechanism and percentage to mechanism table and store data for saving on form submission
         * @returns {boolean}
         */
        function addMechanism() {
            $(".dataTables_empty").remove();
            var $percentBox = $("#percentage");
            //TA:#327
            var percent = parseFloat($percentBox.val());

            if (isNaN(percent) || (percent < 1)) {
                alert("Invalid value for percentage");
                return false;
            }
            if ((percent + window.ITECH.totalPercent) > 100) {
                alert("Total percentage must be 100 or less.");
                return false;
            }
            if ($("#new_mechanism").val() === "") {
                return false;
            }

            var $selectedMechanism = $("#new_mechanism option:selected");
            var mechID = $selectedMechanism.val();

            addMechanismToTable(mechID, percent);

            $("#associateMechanisms").data("ids").push(mechID);
            $("#mechanismPercentages").data("percents").push(percent);
            window.ITECH.mechData.assigned_mechanisms[mechID] = {'mechanism_option_id' : mechID, 'percentage' : percent, 'mechanism_phrase' : window.ITECH.mechData['byMechanism'][mechID]['mechanism_phrase']};

            $percentBox.val("");
            calculateMechanismTable();
            availableMechanisms();

            return true;
        }

        function addMechanismToTable(mechID, percent) {
            //TA:#327
            var hours = parseFloat($('#funded_hours_per_week').val());
            //TA:#327
            var cost = parseFloat($('#annual_cost').val());
            var fpercent = percent / 100.0;
            if (isNaN(hours) || isNaN(cost)) {
                return false;
            }
            var $oTable = $('#employee_mechanism_table').dataTable();
            var newRowIDs = $oTable.fnAddData([window.ITECH.mechData['byMechanism'][mechID]['mechanism_phrase'], percent,
                (fpercent * hours).toFixed(1), (fpercent * cost).toFixed(2), '<input type="checkbox" onclick="deleteToggle(this);"/>']);
            var newRow = $($oTable.fnSettings().aoData[newRowIDs[0]].nTr);
            newRow.addClass('newMechanism');
            newRow.prop('id', 'table_mechanism_row_' + mechID);
            newRow.children().last().children()[0].id = 'table_mechanism_delete_toggle_' + mechID;
            newRow.children().first().data("mechID", mechID);
        }

        /**
         * prepare stored data from mechanism table changes for submission to backend
         * @returns {boolean}
         */
        function processMechanismAssociations() {
            var $associate = $("#associateMechanisms");
            var $percentages = $("#mechanismPercentages");
            var $disassociate = $("#disassociateMechanisms");

            if ($associate.data("ids").length && $percentages.data("percents").length) {
                $associate.val($associate.data("ids").join(','));
                $percentages.val($percentages.data("percents").join(','));
            }
            else {
                $associate.val("");
                $percentages.val("");
            }
            if ($disassociate.data("ids").length) {
                $disassociate.val($disassociate.data("ids").join(','));
            }
            else {
                $disassociate.val("");
            }
            return true;
        }
        var availableMechanisms = function () {
            var optList = '<option value="">--choose--</option>';
            var partnerID = $('#select_partner').val();
            var mechData = window.ITECH.mechData;
            var mech;

            if (mechData['byPartner'].hasOwnProperty(partnerID)) {
                var partnerMechanisms = window.ITECH.mechData['byPartner'][partnerID];
                var numMechs = partnerMechanisms.length;
                for (var i = 0; i < numMechs; i++) {
                    if (!mechData.assigned_mechanisms.hasOwnProperty(partnerMechanisms[i]) || mechData.assigned_mechanisms[partnerMechanisms[i]] === undefined) {
                        mech = mechData['byMechanism'][partnerMechanisms[i]]['mechanism_phrase'];
                        optList += '<option value="' + partnerMechanisms[i] + '">' + mechData['byMechanism'][partnerMechanisms[i]]['mechanism_phrase'] + '</option>';
                    }
                }
            }

            $('#new_mechanism').html(optList);
        }

    </script>

</head>
<body class="yui-skin-sam">

<div id="pageHolder">

    <div id="header"><?php require_once('views/scripts/header.phtml'); ?></div>
    <div id="content">

        <?php require_once 'views/scripts/status.phtml' ?>

        <h1><?php $this->mode == 'add' ? print(t('Add') . space . t('Employee')) : print(t('Edit') . space . t('Employee')); ?></h1>
        <form action="" method="post" class="form_employee">
            <legend></legend>

            <?php if ($this->employee['id'] && $this->hasACL('edit_employee') && $this->hasACL('delete_employee')): ?>
                <div class="historyDiv">
                    <a href="<?php echo $this->base_url; ?>/employee/delete/id/<?php echo $this->employee['id']; ?>"><?php echo t('Delete this') . space . t('Employee'); ?></a>
                </div>
                <?php
            endif; // fi historyDiv

            $this->required_fields = array('employee_code', 'select_employee_site_type_option', 'partner_id', 'employee_base_option_id', 'select_employee_qualification_option', 'salary', 'benefits', 'additional_expenses', 'stipend', 'employee_transition_option_id', 'select_employee_role_option', 'disability_option_id', 'disability_comments', 'funded_hours_per_week', 'agreement_end_date', 'facilityInput');

            if (!$this->hasACL('edit_employee')) {
                $this->viewonly = true;
            } 
            ?>
            
            <!-- TA:#256 -->
            <table style="width:100%">
            <tr><td>
            
            <!-- TA:#309 -->
            <div class="fieldLabel"><label><?php echo t('Active'); ?> HRH</label></div>
            <input type="checkbox" name="is_active" id="is_active" style="margin : 4px 5px 12px 0px;" <?php echo (($this->employee['is_active'] === '1' || !$this->employee['is_active'])?'checked="checked"':'');?>"/>
           
           <?php
            echo labelAndField($this, t('Staff Cadre'), $this->cadres, 'select_employee_qualification_option');
            if ($this->setting['display_employee_primary_role'])
                echo labelAndField($this, t('Primary Role'), $this->roles, 'select_employee_role_option');

            echo labelAndField($this, '<span class="required">*</span>' . t('Employee Code'),
                $this->formText('employee_code', $this->employee['employee_code'], array('maxlength' => '15')));

            if ($this->setting['display_employee_dob'])
                echo labelAndField($this, t('Employee Date of Birth') . space . ('(dd/mm/yyyy)'), 'date', 'dob', $this->employee['dob']);

            if ($this->setting['display_employee_disability']) {
                $store = $this->viewonly;
                $this->viewonly = true;
                echo confirmDropdown($this, t('Disability'), 'disability_option_id', $this->employee['disability_option_id']);
                echo labelAndField($this, t('Nature of Disability'), 'text', 'disability_comments', $this->employee['disability_comments']);
                echo '<div class="clear"></div><br /><br />' . PHP_EOL;
                if ($this->hasACL('edit_employee')) {
                    $this->viewonly = $store;
                }
            }

            if ($this->setting['display_partner_employee_number']) {
                if ($this->mode != 'add' && $this->employee['partner_employee_number'])
                    $store = $this->viewonly;
                    $this->viewonly = true;
                    echo labelAndField($this, t('Employee') . space . t('Number'), 'text', 'partner_employee_number', $this->employee['partner_employee_number']);
                    $this->viewonly = $store;
            }

            if ($this->setting['display_employee_partner'])
                echo labelAndField($this, t('Employer'), $this->partners, 'partner_id');

            if ($this->setting['display_employee_base']) {
                echo '<div class="fieldLabel"><span class="required">*</span>' . t('Employee Based at') . '</div>';
                echo '<div class="fieldInput">';
                echo $this->formSelect('employee_base_option_id',
                    isset($this->employee['employee_base_option_id']) ? $this->employee['employee_base_option_id'] : null,
                    array('disable' => !$this->hasACL("edit_employee"), 'onclick' => 'basedAtOther();'),
                    $this->bases);
                echo '</div>';

                echo '<div id="based_at_other_container">';
                echo '<div class="fieldLabel"><span class="required">*</span>' . t('Other, Specify') . '</div>';
                echo '<div class="fieldInput">';
                echo $this->formText('based_at_other', $this->employee['based_at_other'], array("maxlength" => "50"));
                echo '</div></div>';

            }

             //TA:#293 show multiple locations 
            region_filters_dropdown($this, $this->locations, $this->employee, true, false, '', true);
            
            $facDropDown = renderFacilityDropDown($this->facilities, $this->employee['site_id'], $this->viewonly);
            if ($this->hasACL('edit_facility')) {
                $facDropDown .= '<a href="' . $this->base_url . '/site/add">' . t('Insert a New') . space . t('Site') . '</a> ';
                $facDropDown .= '<a href="' . $this->base_url . '/site/search">' . t('View/Edit') . space . t('Site') . '</a>'; // need to put the links inside of the div so they dont wrap to the next line
            }
            echo labelAndField($this, t('Site') . space . t('Name'), $facDropDown, 'facilityInput');
            
            if ($this->setting['display_employee_site_type']) {
                // Disable data requirement until further notice, issue #339
                // echo labelAndField($this, '<span class="required">*</span>' . t('Site') . space . t('Type'), $this->site_types);

                echo labelAndField($this, t('Site') . space . t('Type'), $this->site_types);
            }
            if ($this->setting['display_employee_staff_category'])
                echo labelAndField($this, t('Staff Category'), $this->categories);
            if ($this->setting['display_employee_registration_number'])
                echo labelAndField($this, t('Registration Number'), 'text', 'registration_number', $this->employee['registration_number']);

            if ($this->setting['display_employee_contract_end_date'])
                echo labelAndField($this, t('Contract End Date'), 'date', 'agreement_end_date', $this->employee['agreement_end_date']);
            if ($this->setting['display_employee_intended_transition'])
                echo labelAndField($this, t('Intended Transition'), $this->transitions, 'employee_transition_option_id');
            echo labelAndField($this, t('Other Transition'), 'text', 'transition_other', $this->employee['transition_other']); // hidden field
            if ($this->setting['display_employee_transition_confirmed'])
                echo confirmDropdown($this, t('Transition Confirmed'), 'transition_confirmed', $this->employee['transition_confirmed']);
            echo labelAndField($this, t('Intended Transition Date'), 'date', 'transition_date', $this->employee['transition_date']);
            if ($this->setting['display_employee_complete_transition'])
                echo labelAndField($this, t('Actual Transition Outcome'), $this->transitions_complete, 'employee_transition_complete_option_id');
            echo labelAndField($this, t('Other Transition'), 'text', 'transition_complete_other', $this->employee['transition_complete_other']); // hidden field

            if ($this->setting['display_employee_actual_transition_date'])
                echo labelAndField($this, t('Actual Transition Date'), 'date', 'transition_complete_date', $this->employee['transition_complete_date']);


            // fields for only community health workers and community based workers
            echo '<div class="clear"></div><br /><br />';

            echo '<div id="chw"' . ($this->expandCHWFields ? '' : ' style="display:none;"') . '>';
            if ($this->setting['display_employee_relationship'])
                echo labelAndField($this, t('Relationship between CHW and formal health services'), $this->relationships);
            if ($this->setting['display_employee_referral_mechanism'])
                echo labelAndField($this, t('Referral Mechanism'), $this->referrals);
            if ($this->setting['display_employee_chw_supervisor'])
                echo labelAndField($this, t('CHW Supervisor'), $this->supervisors);
            if ($this->setting['display_employee_trainings_provided'])
                echo labelAndField($this, t('Trainings provided'), $this->provided);
            echo '</div>';

            // yearly costs of employee
            echo '<div class="clear"></div><br /><br />';
            if ($this->setting['display_employee_salary']
                || $this->setting['display_employee_benefits']
                || $this->setting['display_employee_additional_expenses']
                || $this->setting['display_employee_stipend']
            ) {
                echo '<h2>' . t('Annual Cost to Company (CTC) funded by PEPFAR only Amount') . '</h2>';

                if ($this->translation['Employee Local Currency'] && $this->translation['Employee Local Currency'] != 'Employee Local Currency')
                    echo "<br>" . t('Currency:') . space . $this->translation['Employee Local Currency'] . '<br clear="all"/>'; #TODO rework
            }
            if ($this->setting['display_employee_full_time'])
                echo labelAndField($this, t('Full Time'), $this->fulltime);
            
            echo labelAndField($this, t('Funded hours per week'), 'text', 'funded_hours_per_week', $this->employee['funded_hours_per_week']);
            
            //TA:#282 use currentcy format for the next fleds
            if ($this->setting['display_employee_salary'])
                echo labelAndField($this, t('Salary'), 'currency', 'salary', $this->employee['salary']);
            if ($this->setting['display_employee_benefits'])
                echo labelAndField($this, t('Benefits'), 'currency', 'benefits', $this->employee['benefits']);
            if ($this->setting['display_employee_additional_expenses'])
                echo labelAndField($this, t('Additional Expenses'), 'currency', 'additional_expenses', $this->employee['additional_expenses']);
            if ($this->setting['display_employee_stipend'])
                echo labelAndField($this, t('Stipend'), 'currency', 'stipend', $this->employee['stipend']);
            if ($this->setting['display_employee_annual_cost'])
                echo labelAndField($this, t('Annual Cost'), 'currency', 'annual_cost', $this->employee['annual_cost']);

            echo '<div class="clear"></div><br /><br />';


            /////////////////////////// data table - course history - and UI javascript ///////////////////////////
            ?>
            
            <!-- TA:#256 -->
            </td>
				<td style="width:20%" valign='top' align='left'>
						<div class="historyDiv">
						<b><?php echo t("Date created");?></b>&nbsp;<?php echo str_replace(' ','&nbsp;',$this->escape($this->dateCreated));?><br>						
						<b><?php echo t("Created by");?></b>&nbsp;<?php echo $this->creator; ?><br>
						<b><?php echo t("Date updated");?></b>&nbsp;<?php echo str_replace(' ','&nbsp;',$this->escape($this->dateModified));?><br>
						<b><?php echo t("Updated by");?></b>&nbsp;<?php echo $this->updater; ?><br>
						</div>
						</td>
				</tr>
				</table>
				
            <div class="clear"></div>
            <br/><br/>

            <?php if ($this->setting['display_employee_courses_completed']) require_once('employee_course_table.phtml'); ?>

            <h2 class="mechanismsHeader"><?php tp('Mechanisms'); ?>:</h2>

            <table cellpadding="0" cellspacing="0" border="1" class="display tablegrid" id="employee_mechanism_table"
                   style="width:100%">
                <thead>
                <tr>
                    <th><?php tp('Mechanism'); ?></th>
                    <th><?php tp('Percent'); ?></th>
                    <?php if ($this->setting['display_hours_per_mechanism']) { ?>
                        <th><?php tp('Hours'); ?></th>
                    <?php }
                    if ($this->setting['display_annual_cost_to_mechanism']) { ?>
                        <th><?php tp('Annual Cost'); ?></th>
                    <?php } ?>
                    <th><?php tp("Delete?"); ?></th>
                </tr>
                </thead>
                <tfoot>
                <tr>
                    <td class="mechanismTableFooter"><?php tp('Mechanism'); ?> Totals:</td>
                    <td class="mechanismTableFooter" id="mechanismTableFooterPercent">0</td>
                    <?php if ($this->setting['display_hours_per_mechanism']) { ?>
                        <td class="mechanismTableFooter">0</td>
                    <?php }
                    if ($this->setting['display_annual_cost_to_mechanism']) { ?>
                        <td class="mechanismTableFooter">0</td>
                    <?php } ?>
                    <td class="mechanismTableFooter"></td>
                </tr>
                </tfoot>
                <tbody id="employee_mechanism_table_body">
                <?php
                $percent_total = 0;
                foreach ($this->employeeMechanisms as $mechanismID => $mechData) {
                    $percent_total += $mech['percentage'];
                    ?>
                    <tr id="table_mechanism_row_<?php echo $mechanismID; ?>">
                        <td><?php echo $mechData['mechanism_phrase']; ?></td>
                        <td class="percent"><?php echo $mechData['percentage']; ?></td>
                        <?php if ($this->setting['display_hours_per_mechanism']) { ?>
                            <td><?php echo sprintf('%0.1f', $mechData['percentage'] / 100.0 * $this->employee['funded_hours_per_week']); ?></td>
                        <?php }
                        if ($this->setting['display_annual_cost_to_mechanism']) { ?>
                            <td><?php echo sprintf('%0.2f', $mechData['percentage'] / 100.0 * $this->employee['annual_cost']); ?></td>
                        <?php } ?>
                        <td><input id="table_mechanism_delete_toggle_<?php echo $mechanismID;?>" type="checkbox" onclick="deleteToggle(this);"/></td>
                    </tr>
                <?php } ?>

                </tbody>
            </table>
            
            <input type="hidden" id="disassociateMechanisms" name="disassociateMechanisms" <?php
            if (isset($this->employee['disassociateMechanisms'])) {
                echo 'value="' . $this->employee['disassociateMechanisms'] . '"';
            }
            ?>/>

            <?php if (isset($this->employee['associateMechanisms']) && isset($this->employee['mechanismPercentages'])) {
                echo '<input type = "hidden" id = "associateMechanisms" name = "associateMechanisms" value="' . $this->employee['associateMechanisms'] . '" />';
                echo '<input type = "hidden" id = "mechanismPercentages" name = "mechanismPercentages" value="' . $this->employee['mechanismPercentages'] . '" />';
            }
            else {
                echo '<input type = "hidden" id = "associateMechanisms" name = "associateMechanisms" />';
                echo '<input type = "hidden" id = "mechanismPercentages" name = "mechanismPercentages" />';
            }
            ?>
            <br/>
            <div class="clear"></div>
            <div>
                <label class="label">Add Mechanism</label>
                <select id="new_mechanism" name="new_mechanism"></select>
                <span>
                        <label class="label">Percentage</label>
                        <input type="text" id="percentage" name="percentage" value=""/>
                      </span>
                <input type="button" name="associateMechanism" value="<?php tp("Add"); ?>" class="insert"
                       id="mechanismInsertButton" onclick="addMechanism();"/>
            </div>

            <div class="clear"></div>
            <input type="hidden" name="limit" id="limit" value="1"/>

            <input type="submit" class="submitNoArrow" name="saveonly" onclick="processMechanismAssociations();"
                   value="<?php tp('Save'); ?>"/>


        </form>
        <div class="clear"></div>

        <div class="clear"></div>
    </div>
</body>
</html>
